{"version":3,"sources":["assets\\scripts\\Manager\\UserManager\\UserManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { MessageDef } from \"../../Def/MessageDef\";\nimport { HttpUtil } from \"../../Tools/HTTPUtil\";\nimport StorageUtil from \"../../Tools/StorageUtil\";\nimport MessageDispatcher from \"../MessageDispatcher/MessageDispatcher\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class UserManager extends cc.Component {\n\n//#region Instance\n    public static Instance: UserManager;\n    constructor() { super(); }\n    onLoad():void{\n        UserManager.Instance=this;\n    }\n//#endregion\n\n    // host:string=\"http://127.0.0.1:8090\";\n    // param:any={};\n\n    /**\n     * 提交积分完成后跳转页面\n     * 改完这里需要再看一下showresultui\n     * @type {string}\n     * @memberof UserManager\n     */\n    JumpUrl:string=\"http://www.baidu.com\";\n\n\n    /**\n     * 积分提交url\n     *\n     * @type {string}\n     * @memberof UserManager\n     */\n    PostUrl:string=\"http://test.yalixinli.com:9318/brain/game/save\";\n\n    /**\n     * 当前游戏编号\n     *\n     * @type {string}\n     * @memberof UserManager\n     */\n    GameCode:string=\"BRAIN_GAME_CONSTELLATION\";\n\n\n    /**\n     *  Token\n     *\n     * @type {string}\n     * @memberof UserManager\n     */\n    VerificationToken:string=\"\";\n\n    /**\n     * 当前星座序号\n     *\n     * @type {number}\n     * @memberof UserManager\n     */\n    CurrentConstellationNumber:number=0;\n\n\n    /**\n     * 当前星星数量\n     *\n     * @type {number}\n     * @memberof UserManager\n     */\n    CurrentStarNumber:number=0;\n\n    /**\n     * 上传的专注度得分\n     *\n     * @type {number}\n     * @memberof UserManager\n     */\n    CurrentAbsorbedScore:number=0;\n\n\n    PostResultModel:PostResultModel=null;\n    start(){\n        //初始化拿到Token\n        this.VerificationToken=StorageUtil.getData(\"LOGIN_KEY\",\"HelloWorld\");\n    }\n\n    InitPostResultModel(){\n        this.PostResultModel=new PostResultModel();\n        this.PostResultModel.data=[];\n        this.CurrentConstellationNumber=0;\n        this.CurrentStarNumber=0;\n        this.CurrentAbsorbedScore=0;\n    }\n\n    SendResult(callback){\n        this.PostResultModel.gameCode=this.GameCode;\n        this.PostResultModel.finishCount=this.CurrentConstellationNumber.toString();\n        this.PostResultModel.subCount=this.CurrentStarNumber.toString();\n        this.PostResultModel.absorbedScore= this.CurrentAbsorbedScore.toString();\n\n        this.POST(this.PostUrl,this.PostResultModel,callback);\n        // JSON.parse(response)as BrainModel\n        //JSON.stringify(this.PostResultModel.data);\n    }\n\n    POST(url, params, callback) {\n        // let dataStr = '';\n        // Object.keys(params).forEach(key => {\n        //     dataStr += key + '=' + encodeURIComponent(params[key]) + '&';\n        // })\n        // if (dataStr !== '') {\n        //     dataStr = dataStr.substr(0, dataStr.lastIndexOf('&'));\n        //     url = url + '?' + dataStr;\n        // }\n        // url = HttpUtil.baseUrl + url;\n\n        let xhr = cc.loader.getXMLHttpRequest();\n        xhr.open(\"POST\", url, true);\n        // xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n\n        xhr.setRequestHeader(\"Token\", this.VerificationToken);\n\n        \n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                let response = xhr.responseText;\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    let httpStatus = xhr.statusText;\n                    // callback(true, JSON.parse(response));\n                    callback(true, response);\n                    \n                } else {\n                    callback(false, response);\n                }\n\n            }\n        };\n        xhr.timeout = 50000;\n        xhr.send(JSON.stringify(params));\n    }\n}\n\n/*Data*/\nexport class PostResultData {\n    delta: string;\n    theta: string;\n    lowAlpha: string;\n    highAlpha: string;\n    lowBeta: string;\n    highBeta: string;\n    lowGamma: string;\n    highGamma: string;\n    relaxation: string;\n    concentration: string;\n  }\n  \n  /*tsModel1*/\n  export class PostResultModel {\n    startTime: string;\n    endTime: string;\n    gameCode: string;\n    /**\n     * 最终星座得分\n     *\n     * @type {string}\n     * @memberof PostResultModel\n     */\n    finishCount: string;\n    /**\n     * 点亮星星数量\n     *\n     * @type {string}\n     * @memberof PostResultModel\n     */\n    subCount: string;\n    /**\n     * 最后计算专注度的得分\n     *\n     * @type {string}\n     * @memberof PostResultModel\n     */\n    absorbedScore:string;\n    data: PostResultData[];\n  }\n  "]}