{"version":3,"sources":["assets\\scripts\\UI\\GameUI\\Dashboard.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { MessageDef } from \"../../Def/MessageDef\";\nimport DriveManager, { BrainModel } from \"../../Manager/DriveManager/DriveManager\";\nimport MessageDispatcher from \"../../Manager/MessageDispatcher/MessageDispatcher\";\nimport MathUtil from \"../../Tools/MathUtil\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Dashboard extends cc.Component {\n\n    @property(cc.Node)\n    pointer: cc.Node = null;\n\n    @property(cc.Label)\n    dataLab: cc.Label = null;\n\n\n    @property(Number)\n    data:number=0;\n    // onLoad () {}\n\n    onEnable(){\n        this.data=0;\n        this.pointer.angle=125;\n        this.dataLab.string=this.data.toString();\n        MessageDispatcher.Instance.AddEventListener(MessageDef.BrainValueChangeMessage,this.BrainValueChangeMessageHandler,this);\n        // MessageDispatcher.Instance.AddEventListener(MessageDef.BrainConnectMessage,this.BrainConnectMessageHandler,this);\n        // MessageDispatcher.Instance.AddEventListener(MessageDef.BrainNotConnectMessage,this.BrainNotConnectMessageHandler,this);\n        // MessageDispatcher.Instance.AddEventListener(MessageDef.BrainBlockMessage,this.BrainBlockMessageHandler,this);\n        \n\n\n\n    }\n\n    onDisable(){\n        MessageDispatcher.Instance.RemoveEventListener(MessageDef.BrainValueChangeMessage,this.BrainValueChangeMessageHandler,this);\n        // MessageDispatcher.Instance.RemoveEventListener(MessageDef.BrainConnectMessage,this.BrainConnectMessageHandler,this);\n        // MessageDispatcher.Instance.RemoveEventListener(MessageDef.BrainNotConnectMessage,this.BrainNotConnectMessageHandler,this);\n        // MessageDispatcher.Instance.RemoveEventListener(MessageDef.BrainBlockMessage,this.BrainBlockMessageHandler,this);\n        this.data=0;\n        this.pointer.angle=125;\n        this.dataLab.string=this.data.toString();\n    }\n\n\n    BrainValueChangeMessageHandler(module:BrainModel){\n        // console.log(\"及拿来了\");\n        \n        if (module==null) {\n            return;\n        }\n        this.endNumber=Number(DriveManager.Instance.brainModel.brain[0].Concentration);\n        // this.endNumber=Number(DriveManager.Instance.brainModel.brain[0].Relaxation);\n\n        this.StartLerp();\n    }\n    start () {\n        //this.data=0;\n        // console.log();\n        \n        // this.pointer.angle=0 - this.Remap(this.data,0,100,-125,125);\n        //this.pointer.angle=0 - MathUtil.reMap(this.data,0,100,-125,125);\n        //this.dataLab.string=this.data.toString();\n\n    }\n\n\n    UpdateReadData(){\n        if (DriveManager.Instance.brainModel==null) {\n            return;\n        }\n\n        // this.data=Number(DriveManager.Instance.brainModel.brain[0].Relaxation);\n        // this.pointer.angle=0 - MathUtil.reMap(this.data,0,100,-125,125);\n        // this.dataLab.string=this.data.toString();\n\n        //这里开始1s的计时，每刻都要给指针赋值\n        //console.log(Number(DriveManager.Instance.brainModel.brain[0].Relaxation));\n        \n        this.endNumber=Number(DriveManager.Instance.brainModel.brain[0].Relaxation);\n        // 100 -> 50\n        // this.data -> endNum\n        this.StartLerp();\n\n\n        // var obj = { a: this.data }\n        // cc.tween(obj)\n        // .to(1, { a: Number(DriveManager.Instance.brainModel.brain[0].Relaxation) },{\n        //     progress:(start, end, current, time)=>{\n        //         console.log(current);\n                \n        //     }\n        // })\n        // .start()\n        // cc.tween(sdk).to(1, { a: 10 }, {\n        //     progress: (start, end, current, time) => {\n        //         // this.lab.string = Math.round(start + (end - start) * time) + '';//修改页面上的值\n        //         console.log('修改ing', start + (end - start) * time);\n        //         return start + (end - start) * time;\n        //     },\n        //     // easing: \"quintOut\",\n        // }).call(() => {\n        //     console.log('结束了，看看值', sdk.a);\n        // }).start();\n    }\n\n\n    startNumber=0;\n    endNumber=0;\n    lerping=false;\n    timer=0;\n    update (dt) {\n        //console.log(this.data);\n        if (this.lerping) {\n            this.timer+=dt;\n            if (this.timer>=1) {\n                this.lerping=false;\n                this.timer=0;\n\n            }else{\n                this.data= this.Lerp(this.data,this.endNumber,dt*2);\n\n                this.pointer.angle=0 - MathUtil.reMap(this.data,0,100,-125,125);\n                this.dataLab.string=Math.floor(this.data).toString();\n            }\n        }\n    }\n    StartLerp(){\n        this.lerping=true;\n        this.timer=0;\n\n        // this.startNumber=this.data;\n        // this.endNumber=0;\n    }\n    Lerp(start:number,end:number,time:number){\n        return start+(end-start)*time;\n    }\n    // USLerp(start:number,end:number,time:number){\n    //     return start+(end-start)*time;\n    // }\n\n    \n\n}\n"]}