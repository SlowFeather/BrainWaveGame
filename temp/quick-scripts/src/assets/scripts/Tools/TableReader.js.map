{"version":3,"sources":["assets\\scripts\\Tools\\TableReader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAM,OAAO,GAAG,cAAc,CAAC;AAE/B,SAAe,aAAa;;;;wBACxB,qBAAM,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM;wBACvC,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,SAAS,EAAE,UAAU,KAAY,EAAE,QAAe,EAAE,IAAc;4BAC/F,YAAY;wBAChB,CAAC,CAAC,CAAA;oBACN,CAAC,CAAC,EAAA;;oBAJF,SAIE,CAAA;;;;;CACL;AACD,kBAAkB;AAElB,SAAsB,cAAc,CAAC,SAAiB,EAAE,QAAkB;mCAAG,OAAO;;;;wBACtE,qBAAM,UAAU,CAAC,SAAS,CAAC,EAAA;;oBAAjC,GAAG,GAAG,SAA2B;oBACrC,IAAI,QAAQ,EAAE;wBACV,IAAI,CAAC,GAAG,EAAE;4BACN,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAA;yBACjD;wBACD,QAAQ,CAAC,GAAG,CAAC,CAAC;qBACjB;oBACD,sBAAO,GAAG,EAAC;;;;CACd;AATD,wCASC;AAED,SAAgB,UAAU,CAAC,SAAiB;IACxC,IAAI,SAAS,GAAG,SAAS,CAAC,CAAA,uBAAuB;IACjD,IAAI,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,CAAC,CAAC;IACtD,IAAI,KAAK,EAAE;QACP,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAChC;IAED,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM;QACxC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,SAAS,EAAE,UAAU,KAAY,EAAE,QAAa;YAC5E,IAAI,KAAK,EAAE;gBACP,OAAO,CAAC,KAAK,CAAC,CAAC;aAClB;iBACI;gBACD,OAAO,CAAC,IAAI,CAAC,CAAC;aACjB;QACL,CAAC,CAAC,CAAA;IACN,CAAC,CAAC,CAAA;AACN,CAAC;AAjBD,gCAiBC;AAMD,SAAsB,iBAAiB,CAAC,SAAoB,EAAE,EAAU;mCAAG,OAAO;;;;wBAClE,qBAAM,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,EAAA;;oBAAjD,KAAK,GAAG,SAAyC;oBACrD,IAAI,CAAC,KAAK,EAAE;wBACR,sBAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;qBAChC;oBACD,sBAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAC;;;;CACjD;AAND,8CAMC;AAED;IACI,qBAAY,GAAW;QACnB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IACD,6BAAO,GAAP,UAAQ,MAAkB;QAAlB,uBAAA,EAAA,UAAkB;QACtB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IACD,8BAAQ,GAAR;QACI,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACtC,CAAC;IACD,+BAAS,GAAT;QACI,OAAO,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;IACxC,CAAC;IACD,+BAAS,GAAT;QACI,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC;IACD,gCAAU,GAAV;QACI,OAAO,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;IACzC,CAAC;IAEM,4BAAM,GAAb;QACI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;IAEM,4BAAM,GAAb;QACI,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAEM,8BAAQ,GAAf;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IAEM,6BAAO,GAAd,UAAe,GAAW;QACtB,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC;IACtB,CAAC;IAES,mCAAa,GAAvB,UAAwB,eAAgC;QAAhC,gCAAA,EAAA,uBAAgC;QACpD,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;YAChC,OAAO,EAAE,CAAC;SACb;aACI,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE;YACpC,MAAM,IAAI,KAAK,CAAC,gCAA8B,IAAI,CAAC,MAAM,EAAE,wBAAmB,IAAI,CAAC,MAAM,EAAI,CAAC,CAAC;SAClG;QACD,IAAI,SAAS,GAAW,EAAE,CAAC;QAC3B,IAAI,CAAC,GAAW,EAAE,CAAC;QACnB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,OAAO,IAAI,EAAE;YACT,IAAI,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;gBAChC,MAAM;aACT;YACD,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,IAAI;gBACT,SAAS;YACb,IAAI,CAAC,OAAO,EAAE;gBACV,IAAI,CAAC,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;oBACpC,OAAO,GAAG,IAAI,CAAC;iBAClB;qBACI,IAAI,CAAC,IAAI,GAAG,EAAE;oBACf,MAAM;iBACT;qBACI,IAAI,CAAC,IAAI,IAAI,EAAE;oBAChB,IAAI,CAAC,eAAe;wBAChB,MAAM;iBACb;qBACI;oBACD,SAAS,IAAI,CAAC,CAAC;iBAClB;aACJ;iBACI;gBACD,IAAI,CAAC,IAAI,IAAI,EAAE;oBACX,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,IAAI,EAAE;wBACzD,SAAS,IAAI,IAAI,CAAC;wBAClB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;qBACnB;yBACI;wBACD,OAAO,GAAG,KAAK,CAAC;qBACnB;iBACJ;qBACI;oBACD,SAAS,IAAI,CAAC,CAAC;iBAClB;aACJ;SACJ;QAED,OAAO,SAAS,CAAC;IACrB,CAAC;IAIL,kBAAC;AAAD,CA1FA,AA0FC,IAAA;AA1FY,kCAAW;AAkGxB,SAAgB,SAAS,CAA2B,YAAoB,EAAE,EAAe;IACrF,IAAI,QAAQ,GAAiB,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,YAAY,EAAE,EAAE,CAAC,SAAS,CAAiB,CAAC;IACpG,IAAI,CAAC,QAAQ,EAAE;QACX,OAAO;KACV;IAED,YAAY;IACZ,IAAI,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC5C,IAAI,GAAG,GAAW,CAAC,CAAC;IACpB,oBAAoB;IACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACvC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;YAC1B,SAAS;SACZ;QAED,IAAI,IAAI,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,IAAI,GAAM,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAExB,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACjB,EAAE,GAAG,CAAC;SACT;aACI;YACD,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE;gBACd,OAAO,CAAC,KAAK,CAAC,cAAY,YAAY,SAAI,CAAC,aAAU,CAAC,CAAA;aACzD;YACD,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;SACjB;QACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;KACxB;AACL,CAAC;AA9BD,8BA8BC","file":"","sourceRoot":"/","sourcesContent":["\nconst CSV_DIR = \"StaticDatas/\";\n\nasync function PreLoadAllCsv() {\n    await new Promise(function (resolve, reject) {\n        cc.loader.loadResDir(CSV_DIR, cc.TextAsset, function (error: Error, resource: any[], urls: string[]) {\n            //resolve();\n        })\n    })\n}\n//PreLoadAllCsv();\n\nexport async function PreLoadCsvSync(tableName: string, callback: Function): Promise<boolean> {\n    let ret = await PreLoadCsv(tableName);\n    if (callback) {\n        if (!ret) {\n            console.error(\"************表加载失败：\", tableName)\n        }\n        callback(ret);\n    }\n    return ret;\n}\n\nexport function PreLoadCsv(tableName: string): Promise<boolean> {\n    let assetName = tableName;// CSV_DIR + tableName;\n    let asset = cc.loader.getRes(assetName, cc.TextAsset);\n    if (asset) {\n        return Promise.resolve(true);\n    }\n\n    return new Promise(function (resolve, reject) {\n        cc.loader.loadRes(assetName, cc.TextAsset, function (error: Error, resource: any) {\n            if (error) {\n                resolve(false);\n            }\n            else {\n                resolve(true);\n            }\n        })\n    })\n}\n\ninterface TalbeFunc extends Function {\n    getById(id: number): any;\n    getFilename(): string;\n}\nexport async function GetTableDataAsync(tableType: TalbeFunc, id: number): Promise<any> {\n    let bLoad = await PreLoadCsv(tableType.getFilename());\n    if (!bLoad) {\n        return Promise.resolve(null);\n    }\n    return Promise.resolve(tableType.getById(id));\n}\n\nexport class TableReader {\n    constructor(str: string) {\n        this.m_str = str;\n        this.m_pos = 0;\n    }\n    getChar(offset: number = 0): string {\n        return this.m_str[offset];\n    }\n    readChar(): string {\n        return this.getChar(this.m_pos++);\n    }\n    getNumber(): number {\n        return Number(this.readNextToken());\n    }\n    getString(): string {\n        return this.readNextToken();\n    }\n    getBoolean(): boolean {\n        return Boolean(this.readNextToken());\n    }\n\n    public getLen(): number {\n        return this.m_str.length;\n    }\n\n    public getPos(): number {\n        return this.m_pos;\n    }\n\n    public resetPos() {\n        this.m_pos = 0;\n    }\n\n    public advance(num: number) {\n        this.m_pos += num;\n    }\n\n    protected readNextToken(isIgnoreNewline: boolean = false): string {\n        if (this.getPos() == this.getLen()) {\n            return \"\";\n        }\n        else if (this.getPos() > this.getLen()) {\n            throw new Error(`readNextToken value.getPos=${this.getPos()} > value.getLen=${this.getLen()}`);\n        }\n        let strResult: string = \"\";\n        let c: string = \"\";\n        let isQuota = false;\n        while (true) {\n            if (this.getPos() >= this.getLen()) {\n                break;\n            }\n            c = this.readChar();\n            if (c == '\\r')\n                continue;\n            if (!isQuota) {\n                if (c == '\\\"' && strResult.length == 0) {\n                    isQuota = true;\n                }\n                else if (c == ',') {\n                    break;\n                }\n                else if (c == '\\n') {\n                    if (!isIgnoreNewline)\n                        break;\n                }\n                else {\n                    strResult += c;\n                }\n            }\n            else {\n                if (c == '\\\"') {\n                    if (this.getPos() < this.getLen() && this.getChar() == '\\\"') {\n                        strResult += '\\\"';\n                        this.advance(1);\n                    }\n                    else {\n                        isQuota = false;\n                    }\n                }\n                else {\n                    strResult += c;\n                }\n            }\n        }\n\n        return strResult;\n    }\n\n    protected m_str: string;\n    protected m_pos: number;\n}\n\ninterface TableInterface {\n    id?: number;\n    readOriginal(buffer: TableReader): void;\n    isAutoId(): boolean;\n    insertData(id: number): void;\n}\nexport function ReadTable<T extends TableInterface>(strTableName: string, TB: new () => T) {\n    let txtAsset: cc.TextAsset = cc.loader.getRes(CSV_DIR + strTableName, cc.TextAsset) as cc.TextAsset;\n    if (!txtAsset) {\n        return;\n    }\n\n    //split line\n    let lineArray = txtAsset.text.split(\"\\r\\n\");\n    let iID: number = 0;\n    //skip first 3 lines\n    for (let i = 3; i < lineArray.length; ++i) {\n        if (lineArray[i].length == 0) {\n            continue;\n        }\n\n        let line = new TableReader(lineArray[i]);\n        let data: T = new TB;\n        data.readOriginal(line);\n\n        if (data.isAutoId()) {\n            ++iID;\n        }\n        else {\n            if (data.id <= 0) {\n                console.error(`Warning: ${strTableName}:${i} id <= 0`)\n            }\n            iID = data.id;\n        }\n        data.insertData(iID);\n    }\n}"]}