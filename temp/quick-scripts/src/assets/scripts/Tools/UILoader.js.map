{"version":3,"sources":["assets\\scripts\\Tools\\UILoader.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// import { G } from \"./GameGlobal\";\n\n\nexport default class UILoader {\n    \n    static singleInstance: UILoader = null;\n    static get Instance(): UILoader {\n        if (UILoader.singleInstance == null) {\n            UILoader.singleInstance = new UILoader();\n        }\n        return UILoader.singleInstance;\n    }\n\n    // 当前场景资源统计\n    private m_sceneLoadResMap: Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\n\n    /** 加载 */\n    public load = function (resources: string | string[] | {\n        uuid?: string;\n        url?: string;\n        type?: string;\n    }) {\n        return new Promise((resolve, reject) => {\n            cc.loader.load(resources, (err, asset) => {\n                if (err) {\n                    console.error(`[资源加载] 错误 ${err}`);\n                    return;\n                }\n                resolve(asset);\n            });\n        });\n    }\n\n    // \n    public loadRes = function (url: string, type: typeof cc.Asset) {\n        if (!url || !type) {\n            console.error(\"参数错误\", url, type);\n            return;\n        }\n        return new Promise((resolve, reject) => {\n            cc.loader.loadRes(url, type, (err, asset) => {\n                if (err) {\n                    console.error(`[资源加载] 错误 ${err}`);\n                    return;\n                }\n                resolve(asset);\n            });\n        });\n\n    }\n\n    loadResArr(paths: Array<string>, callfun: Function) {\n        cc.loader.loadResArray(paths, function (err, assets) {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            callfun(assets);\n        }.bind(this));\n    }\n\n\n    loadStaticRes(url: string, type: typeof cc.Asset, tag: string, callback) {\n        if (!url || !type || !callback) {\n            console.error(\"参数错误\");\n            return;\n        }\n        cc.loader.loadRes(url, type, (err, asset) => {\n            callback(asset);\n            this._parseStaticRes(asset, tag);\n        });\n    }\n\n    loadStaticResArr(paths: Array<string>, tag: string, callfun: Function) {\n        if (!paths || !tag || !callfun) {\n            console.error(\"参数错误\");\n            return;\n        }\n\n        cc.loader.loadResArray(paths, function (err, assets) {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            callfun(assets);\n            assets.forEach((asset) => {\n                this._parseStaticRes(asset, tag);\n            });\n        }.bind(this));\n    }\n\n\n\n    loadAudioClip(path: string, callfun) {\n        cc.loader.loadRes(path, cc.AudioClip, (err, audioclip) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            callfun(audioclip);\n        });\n    }\n    loadPrefabRes(path: string, callfun: Function, retainRes: boolean = false, curSceneRes: number = -1) {\n        cc.loader.loadRes(path, cc.Prefab, (err, prefab) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            if (retainRes) {\n                this.retatinRes(path);\n                let deps = cc.loader.getDependsRecursively(prefab);\n                if (deps) {\n                    deps.forEach(url => {\n                        this.loadCurSceneRes(curSceneRes, url);\n                    });\n                }\n            }\n            callfun(prefab);\n        });\n    }\n    loadSpineInScene(path: string, callfun: Function,) {\n        // this.loadSpineRes(path, callfun, true, G.curRunningScene)\n        this.loadSpineRes(path, callfun, true, 0)\n\n    }\n    loadPrefabInScene(path: string, callfun: Function,) {\n        // this.loadPrefabRes(path, callfun, true, G.curRunningScene)\n        this.loadPrefabRes(path, callfun, true, 0)\n\n    }\n    loadSpriteFrameInScene(path: string, callfun: Function,) {\n        // this.loadSpriteFrame(path, callfun, true, G.curRunningScene)\n        this.loadPrefabRes(path, callfun, true, 0)\n\n    }\n\n    /**\n     * 加载当前的SpriteFrame资源\n     * @param path 当前SpriteFrame路径\n     * @param callfun 加载成功回调\n     * @param retainRes 释放开启资源计数（记录场景资源必须为ture）\n     * @param curSceneRes 资源是否为当前场景资源\n     */\n    loadSpriteFrame(path: string, callfun: Function, retainRes: boolean = false, curSceneRes: number = -1) {\n        cc.loader.loadRes(path, cc.SpriteFrame, (err, spriteFrame) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            if (retainRes) {\n                this.retatinRes(spriteFrame._textureFilename);\n                this.loadCurSceneRes(curSceneRes, spriteFrame._textureFilename);\n            }\n            callfun(spriteFrame);\n        });\n    }\n\n    /**\n     * 加载当前的spine资源\n     * @param path 当前spine路径\n     * @param callfun 加载成功回调\n     * @param retainRes 释放开启资源计数（记录场景资源必须为ture）\n     * @param curSceneRes 资源是否为当前场景资源\n     */\n    loadSpineRes(path: string, callfun: Function, retainRes: boolean = false, curSceneRes: number = -1) {\n        cc.loader.loadRes(path, sp.SkeletonData, (err, spine: sp.SkeletonData) => {\n            if (err) {\n                console.error(err);\n                return;\n            }\n            if (retainRes) {\n                spine.textures.forEach((texture, key) => {\n                    this.retatinRes(texture.url);\n                    this.loadCurSceneRes(curSceneRes, texture.url)\n                });\n            }\n            callfun(spine);\n        });\n    }\n    /**\n     * 当加载资源记录为跟随场景释放时使用\n     * @param curSceneRes 当前场景\n     * @param resUrl 资源路径\n     */\n    private loadCurSceneRes(curSceneRes: number, resUrl: string) {\n        if (curSceneRes > 0) {\n            let resMap = this.m_sceneLoadResMap.get(curSceneRes);\n            if (resMap) {\n                let count = 1;\n                let res = resMap.get(resUrl);\n                if (res) {\n                    count += resMap.get(resUrl);\n                }\n                resMap.set(resUrl, count);\n            } else {\n                resMap = new Map<string, number>();\n                resMap.set(resUrl, 1);\n                this.m_sceneLoadResMap.set(curSceneRes, resMap);\n            }\n        }\n    }\n\n\n    // loadSpriteFrames(paths: Array<string>, callfun: Function, retainRes: boolean = false) {\n    //     cc.loader.loadResArray(paths, cc.SpriteFrame, function (err, spriteFrames) {\n    //         if (err) {\n    //             console.error(err);\n    //             return;\n    //         }\n    //         if (retainRes) {\n    //             spriteFrames.forEach((spriteFrame) => {\n    //                 this.retatinRes(spriteFrame._textureFilename);\n    //             });\n\n    //         }\n    //         callfun(spriteFrames);\n    //     }.bind(this));\n    // }\n\n\n    /**\n     * 释放当前SpriteFrame的资源引用\n     * @param spriteFrame 当前的SpriteFrame\n     */\n    releaseSpriteFrameRes(spriteFrame: cc.SpriteFrame): void {\n        if (spriteFrame) {\n            this.releaseRes(spriteFrame['_textureFilename']);\n            this.gc();\n        }\n    }\n    /**\n     * 释放当前spine资源引用\n     * @param spine 当前的spine\n     */\n    releaseSpineRes(spine: sp.SkeletonData): void {\n        if (spine.textures) {\n            spine.textures.forEach((texture, key) => {\n                this.releaseRes(texture.url);\n            });\n            this.gc();\n        }\n    }\n    /**\n     * 释放资源的预设或者UUID\n     * @param prefab 预设或者UUID\n     */\n    releasePrefabRes(prefab: cc.Prefab | string): void {\n        if (prefab) {\n            let deps = cc.loader.getDependsRecursively(prefab);\n            if (deps) {\n                deps.forEach(url => {\n                    this.releaseRes(url);\n                });\n            }\n            this.gc();\n        }\n    }\n    /**\n     * \n     * 释放当前场景加载资源\n     * 仅在加载资源时添加对应场景的资源才有效，等到场景切换时释放\n     * @param curScene 当前场景\n     */\n    releaseCurSceneAllRes(curScene: number, callback?: Function): void {\n        if (this.m_sceneLoadResMap.size > 0) {\n            for (let [sceneIndex, resMap] of this.m_sceneLoadResMap) {\n                if (sceneIndex == curScene) {\n                    resMap.forEach((count: number, resUrl: string) => {\n                        this.releaseRes(resUrl, count);\n                    });\n                    resMap.clear();\n                    this.gc();\n                    if (callback) {\n                        callback();\n                    }\n                    return;\n                }\n            }\n        }\n        if (callback) {\n            callback();\n        }\n    }\n    /**\n     * 释放当前场景加载资源\n     * @param curScene 当前场景\n     * @param resUrl 资源的URL\n     */\n    releaseCurSceneRes(curScene: number, resUrl: string): void {\n        if (this.m_sceneLoadResMap.size > 0) {\n            let resMap = this.m_sceneLoadResMap.get(curScene);\n            if (resMap) {\n                let rescount = resMap.get(resUrl);\n                if (rescount > 0) {\n                    rescount -= 1;\n                    if (rescount <= 0) {\n                        resMap.delete(resUrl);\n                    } else {\n                        resMap.set(resUrl, rescount);\n                    }\n                    this.releaseRes(resUrl, 1);\n                    this.gc();\n                }\n            }\n        }\n    }\n\n\n    releaseMusicRes(res: string): void {\n        this.releaseRes(res);\n        this.gc();\n    }\n\n\n\n    releaseStaticRes(tag: string): void {\n        var texturesInCache = cc.loader[\"_cache\"];\n        var release_key = [];\n        for (var asset in texturesInCache) {\n            if (tag && texturesInCache[asset].uTag !== tag) {\n                continue;\n            }\n\n            if (texturesInCache[asset].bk_count > 0 && texturesInCache[asset].uStatic) {\n                // 移除 Static 标识, \n                texturesInCache[asset].uStatic == null;\n                delete texturesInCache[asset].uStatic;\n                continue;\n            }\n\n            if (texturesInCache[asset].bk_count <= 0) {\n                release_key.push(texturesInCache[asset].url);\n                console.log(`释放资源:${texturesInCache[asset].url}`);\n                cc.loader.release(texturesInCache[asset].url);\n            }\n        }\n\n        if (release_key.length > 0) {\n            this._depthGC(release_key);\n        }\n    }\n\n\n\n\n    getCacheCount() {\n        return Object.keys(cc.loader[\"_cache\"]).length;\n    }\n\n\n\n    retatinRes(res: string) {\n        if (!cc.loader[\"_cache\"][res]) {\n            return;\n        }\n\n        if (!cc.loader[\"_cache\"][res].bk_count) {\n            cc.loader[\"_cache\"][res].bk_count = 0;\n        }\n        cc.loader[\"_cache\"][res].bk_count += 1;\n    }\n\n    retainArrayRes(res: string[]) {\n        res.forEach((item) => {\n            this.retatinRes(item);\n        });\n    }\n\n    retainNodeRes(node: cc.Node) {\n        this._parserNodeRes(node, 1);\n    }\n\n    releaseNodeRes(node: cc.Node) {\n        this._parserNodeRes(node, -1);\n    }\n\n    releaseRes(res: string, count: number = 1) {\n        if (!cc.loader[\"_cache\"][res]) {\n            return;\n        }\n\n        if (!cc.loader[\"_cache\"][res].bk_count) {\n            cc.loader[\"_cache\"][res].bk_count = 0;\n        }\n        cc.loader[\"_cache\"][res].bk_count -= count;\n    }\n\n    releaseArrayRes(res: string[]) {\n        res.forEach((item) => {\n            this.releaseRes(item);\n        });\n    }\n\n\n\n\n    gc() {\n        var texturesInCache = cc.loader[\"_cache\"];\n        var release_key = [];\n        for (var asset in texturesInCache) {\n            if (texturesInCache[asset].uStatic) {\n                continue;\n            }\n            if (texturesInCache[asset].bk_count <= 0) {\n                release_key.push(texturesInCache[asset].url);\n                console.log(`释放资源:${texturesInCache[asset].url}`);\n                cc.loader.release(texturesInCache[asset].url);\n            }\n        }\n\n        if (release_key.length > 0) {\n            this._depthGC(release_key);\n        }\n    }\n\n\n    updateSpriteTexture(target: cc.Node, spriteFrame: cc.SpriteFrame) {\n        if (!target || !spriteFrame || !target.getComponent(cc.Sprite)) {\n            return;\n        }\n        let sprite = target.getComponent(cc.Sprite);\n        this._replaceTagetTexture(sprite, \"spriteFrame\", spriteFrame);\n        this.gc();\n    }\n\n    updateButtonTexture(target: cc.Node, normalSprite?: cc.SpriteFrame, pressedSprite?: cc.SpriteFrame, hoverSprite?: cc.SpriteFrame, disabledSprite?: cc.SpriteFrame) {\n        if (!target || !normalSprite) {\n            console.error(\"参数错误\")\n            return;\n        }\n\n        if (!target.getComponent(cc.Button)) {\n            console.error(\"目标节点没有Button组件\");\n            return;\n        }\n\n        let button = target.getComponent(cc.Button);\n        if (normalSprite) {\n            this._replaceTagetTexture(button, \"normalSprite\", normalSprite);\n        }\n\n        if (pressedSprite) {\n            this._replaceTagetTexture(button, \"pressedSprite\", pressedSprite);\n        }\n\n        if (hoverSprite) {\n            this._replaceTagetTexture(button, \"hoverSprite\", hoverSprite);\n        }\n\n        if (disabledSprite) {\n            this._replaceTagetTexture(button, \"disabledSprite\", disabledSprite);\n        }\n        this.gc();\n    }\n\n    _depthGC(strs: Array<string>) {\n        var texturesInCache = cc.loader[\"_cache\"];\n        var release_json = [];\n        for (var asset in texturesInCache) {\n            if (texturesInCache[asset].dependKeys && texturesInCache[asset].dependKeys.length > 0) {\n                var is_release = false;\n                for (var i = 0; i < texturesInCache[asset].dependKeys.length; i++) {\n                    if (strs.indexOf(texturesInCache[asset].dependKeys[i]) !== -1) {\n                        is_release = true;\n                    }\n                }\n                if (is_release /*&& texturesInCache[asset].bk_count <= 0*/) {\n                    release_json.push(texturesInCache[asset].url);\n                    console.log(`释放资源:${texturesInCache[asset].url}`);\n                    cc.loader.release(texturesInCache[asset].url);\n                }\n            }\n        }\n\n        if (release_json.length > 0) {\n            this._depthGC(release_json);\n        }\n    }\n\n\n    _parseStaticRes(item: typeof cc.Asset, tag: string) {\n        if (item instanceof cc.Texture2D) {\n            cc.loader[\"_cache\"][item.url].uStatic = true;\n            cc.loader[\"_cache\"][item.url].uTag = tag;\n        } else if (item instanceof cc.SpriteFrame) {\n            cc.loader[\"_cache\"][item[\"_textureFilename\"]].uStatic = true;\n            cc.loader[\"_cache\"][item[\"_textureFilename\"]].uTag = tag;\n        } else if (item instanceof cc.Prefab) {\n            this._parseStaticPrefab(item, tag);\n        } else if (item instanceof cc.BitmapFont) {\n            cc.loader[\"_cache\"][item[\"spriteFrame\"]._textureFilename].uStatic = true;\n            cc.loader[\"_cache\"][item[\"spriteFrame\"]._textureFilename].uTag = tag;\n        } else if (item instanceof cc.SpriteAtlas) {\n            var keys = Object.keys(item[\"_spriteFrames\"])\n            keys.forEach((key) => {\n                cc.loader[\"_cache\"][item[\"_spriteFrames\"][key]._textureFilename].uStatic = true;\n                cc.loader[\"_cache\"][item[\"_spriteFrames\"][key]._textureFilename].uTag = tag;\n            });\n        } else if (item instanceof cc.AnimationClip) {\n            console.error('AnimationClip 资源加载未做处理');\n        } else if (item instanceof Object && item[\"name\"]) {\n            console.error('Object 资源加载未做处理');\n        }\n    }\n\n    _parseStaticPrefab(node, tag: string) {\n        var prefab = node;\n        if (node.data) {\n            prefab = node.data;\n        }\n\n        if (!(prefab instanceof cc.Scene)) {\n            this._parseStaticNode(prefab, tag);\n        }\n        let children = prefab._children;\n        children.forEach((child) => {\n            this._parseStaticNode(child, tag);\n            this._parseStaticPrefab(child, tag);\n        });\n    }\n\n    _retatinStaticRes(res: string, tag: string) {\n        if (!cc.loader[\"_cache\"][res]) {\n            return;\n        }\n\n        if (!cc.loader[\"_cache\"][res].bk_count) {\n            cc.loader[\"_cache\"][res].bk_count = 0;\n        }\n        cc.loader[\"_cache\"][res].uStatic = true;\n        cc.loader[\"_cache\"][res].uTag = tag;\n    }\n\n    _parseStaticNode(node: cc.Node, tag: string) {\n        // sprite 组件\n        let sprite = node.getComponent(cc.Sprite);\n        if (sprite && sprite.spriteFrame) {\n            this._retatinStaticRes(sprite.spriteFrame[\"_textureFilename\"], tag);\n        }\n\n        // button 组件\n        let button = node.getComponent(cc.Button);\n        if (button && button.normalSprite) {\n            this._retatinStaticRes(button.normalSprite[\"_textureFilename\"], tag);\n        }\n        if (button && button.pressedSprite) {\n            this._retatinStaticRes(button.pressedSprite[\"_textureFilename\"], tag);\n        }\n        if (button && button.hoverSprite) {\n            this._retatinStaticRes(button.hoverSprite[\"_textureFilename\"], tag);\n        }\n        if (button && button.disabledSprite) {\n            this._retatinStaticRes(button.disabledSprite[\"_textureFilename\"], tag);\n        }\n\n        // label 组件\n        let label = node.getComponent(cc.Label);\n        if (label && label.font && label.font instanceof cc.BitmapFont && label.font[\"spriteFrame\"]) {\n            this._retatinStaticRes(label.font[\"spriteFrame\"]._textureFilename, tag);\n        }\n\n        // richText 组件\n        let richText = node.getComponent(cc.RichText);\n        if (richText && richText.imageAtlas) {\n            let keys = Object.keys(richText.imageAtlas[\"_spriteFrames\"]);\n            if (keys.length > 0) {\n                this._retatinStaticRes(richText.imageAtlas[\"_spriteFrames\"][keys[0]]._textureFilename, tag);\n            }\n        }\n\n        // particleSystem 组件\n        let particleSystem = node.getComponent(cc.ParticleSystem);\n        if (particleSystem && particleSystem[\"_texture\"]) {\n            this._retatinStaticRes(particleSystem[\"_texture\"], tag);\n        }\n\n        // pageViewIndicator 组件\n        let pageViewIndicator = node.getComponent(cc.PageViewIndicator);\n        if (pageViewIndicator && pageViewIndicator.spriteFrame) {\n            this._retatinStaticRes(pageViewIndicator.spriteFrame[\"_textureFilename\"], tag);\n        }\n\n        // editBox 组件\n        let editBox = node.getComponent(cc.EditBox);\n        if (editBox && editBox.backgroundImage) {\n            this._retatinStaticRes(editBox.backgroundImage[\"_textureFilename\"], tag);\n        }\n\n        // Mask\n        let mask = node.getComponent(cc.Mask);\n        if (mask && mask.spriteFrame) {\n            this._retatinStaticRes(mask.spriteFrame[\"_textureFilename\"], tag);\n        }\n    }\n\n\n\n    _replaceTagetTexture(target: any, attrName: string, newNormalSprite: cc.SpriteFrame) {\n        if (target[attrName] === newNormalSprite) {\n            return;\n        }\n        if (target[attrName]) {\n            this.releaseRes(target[attrName]._textureFilename);\n        }\n        this.retatinRes(newNormalSprite[\"_textureFilename\"]);\n        target[attrName] = newNormalSprite;\n    }\n\n    _parserNodeRes(node: cc.Node, number: number) {\n        let children = node.children;\n        this._parserNodeComponentRes(node, number);\n        children.forEach((child) => {\n            this._parserNodeRes(child, number);\n        });\n    }\n\n    _parserNodeComponentRes(node: cc.Node, num: number) {\n        this._parserComponentSprite(node, num);\n        this._parserComponentButton(node, num);\n        this._parserComponentLabel(node, num);\n        this._parserComponentRichText(node, num);\n        this._parserComponentParticleSystem(node, num);\n        this._parserComponentPageViewIndicator(node, num);\n        this._parserComponentEditBox(node, num);\n        this._parserComponentMask(node, num);\n\n        // TODO 释放其他组件附带的资源\n    }\n\n    _parserComponentSprite(node: cc.Node, num: number) {\n        let sprite = node.getComponent(cc.Sprite);\n        if (!sprite) {\n            return;\n        }\n        if (num > 0) {\n            this.retatinRes(sprite.spriteFrame[\"_textureFilename\"]);\n            return;\n        }\n        this.releaseRes(sprite.spriteFrame[\"_textureFilename\"]);\n    }\n\n    _parserComponentButton(node: cc.Node, num: number) {\n        let button = node.getComponent(cc.Button);\n        if (!button) {\n            return;\n        }\n\n        if (button.normalSprite) {\n            if (num > 0) {\n                this.retatinRes(button.normalSprite[\"_textureFilename\"]);\n            } else {\n                this.releaseRes(button.normalSprite[\"_textureFilename\"]);\n            }\n        }\n\n        if (button.pressedSprite) {\n            if (num > 0) {\n                this.retatinRes(button.pressedSprite[\"_textureFilename\"]);\n            } else {\n                this.releaseRes(button.pressedSprite[\"_textureFilename\"]);\n            }\n\n        }\n\n        if (button.hoverSprite) {\n            if (num > 0) {\n                this.retatinRes(button.hoverSprite[\"_textureFilename\"]);\n            } else {\n                this.releaseRes(button.hoverSprite[\"_textureFilename\"]);\n            }\n        }\n\n        if (button.disabledSprite) {\n            if (num > 0) {\n                this.retatinRes(button.disabledSprite[\"_textureFilename\"]);\n            } else {\n                this.releaseRes(button.disabledSprite[\"_textureFilename\"]);\n            }\n        }\n    }\n\n    _parserComponentLabel(node: cc.Node, num: number) {\n        let label = node.getComponent(cc.Label);\n        if (!label || !label.font || !(label.font instanceof cc.BitmapFont) || !label.font[\"spriteFrame\"]) {\n            return;\n        }\n\n        if (num > 0) {\n            this.retatinRes(label.font[\"spriteFrame\"][\"_textureFilename\"]);\n            return;\n        }\n        this.releaseRes(label.font[\"spriteFrame\"][\"_textureFilename\"]);\n    }\n\n    _parserComponentRichText(node: cc.Node, num: number) {\n        let richText = node.getComponent(cc.RichText);\n        if (!richText || !richText.imageAtlas) {\n            return;\n        }\n\n        let keys = Object.keys(richText.imageAtlas[\"_spriteFrames\"]);\n        if (keys.length <= 0) {\n            return;\n        }\n\n        if (num > 0) {\n            this.retatinRes(richText.imageAtlas[\"_spriteFrames\"][keys[0]][\"_textureFilename\"]);\n            return;\n        }\n        this.releaseRes(richText.imageAtlas[\"_spriteFrames\"][keys[0]][\"_textureFilename\"]);\n    }\n\n    _parserComponentParticleSystem(node: cc.Node, num: number) {\n        let particleSystem = node.getComponent(cc.ParticleSystem);\n        if (!particleSystem || !particleSystem[\"_texture\"]) {\n            return;\n        }\n\n        if (num > 0) {\n            this.retatinRes(particleSystem[\"_texture\"]);\n            return;\n        }\n        this.releaseRes(particleSystem[\"_texture\"]);\n    }\n\n    _parserComponentPageViewIndicator(node: cc.Node, num: number) {\n        let pageViewIndicator = node.getComponent(cc.PageViewIndicator);\n        if (!pageViewIndicator || !pageViewIndicator.spriteFrame) {\n            return;\n        }\n\n        if (num > 0) {\n            this.retatinRes(pageViewIndicator.spriteFrame[\"_textureFilename\"]);\n            return;\n        }\n        this.releaseRes(pageViewIndicator.spriteFrame[\"_textureFilename\"]);\n    }\n\n    _parserComponentEditBox(node: cc.Node, num: number) {\n        let editBox = node.getComponent(cc.EditBox);\n        if (!editBox || !editBox.backgroundImage) {\n            return;\n        }\n\n        if (num > 0) {\n            this.retatinRes(editBox.backgroundImage[\"_textureFilename\"]);\n            return;\n        }\n        this.releaseRes(editBox.backgroundImage[\"_textureFilename\"]);\n    }\n\n    _parserComponentMask(node: cc.Node, num: number) {\n        let mask = node.getComponent(cc.Mask);\n        if (!mask || !mask.spriteFrame) {\n            return;\n        }\n\n        if (num > 0) {\n            this.retatinRes(mask.spriteFrame[\"_textureFilename\"]);\n            return;\n        }\n        this.releaseRes(mask.spriteFrame[\"_textureFilename\"]);\n\n    }\n}"]}