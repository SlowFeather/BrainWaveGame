{"version":3,"sources":["assets\\scripts\\Tools\\TimeUtil.ts"],"names":[],"mappings":";;;;;;AACA;IAAA;IAsFA,CAAC;IAhFG;;;MAGE;IACY,mBAAU,GAAxB,UAAyB,IAAY,EAAE,MAA6C,EAAE,GAAe;QAA9D,uBAAA,EAAA,SAAiB,cAAc,CAAC,aAAa;QAAE,oBAAA,EAAA,OAAe;QACjG,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;QAClD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACjD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC;QAEnC,IAAI,KAAK,GAAQ;YACb,CAAC,EAAE,GAAG;YACN,EAAE,EAAE,GAAG;YACP,CAAC,EAAE,GAAG;YACN,EAAE,EAAE,GAAG;YACP,CAAC,EAAE,IAAI;YACP,EAAE,EAAE,IAAI;YACR,CAAC,EAAE,IAAI;YACP,EAAE,EAAE,IAAI;YACR,CAAC,EAAE,GAAG;YACN,EAAE,EAAE,GAAG;YACP,CAAC,EAAE,GAAG;YACN,EAAE,EAAE,GAAG;YACP,CAAC,EAAE,GAAG;YACN,EAAE,EAAE,GAAG;YACP,CAAC,EAAE,GAAG;YACN,EAAE,EAAE,GAAG;SACV,CAAC;QACF,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,UAAC,GAAW;YACjD,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAClB,CAAC;IAEA;;;MAGE;IACW,kBAAS,GAAvB,UAAwB,SAAiB;QACrC,4BAA4B;QAC5B,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC3B,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACxB,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC3B,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC1B,OAAO,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtI,CAAC;IAED;;;;;OAKG;IACW,6BAAoB,GAAlC,UAAmC,IAAY;QAC3C,IAAI,GAAG,GAAW,EAAE,CAAC;QACrB,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,EAAE;YAClB,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,cAAc,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;SAChE;aACI,IAAI,IAAI,GAAG,IAAI,EAAE;YAClB,IAAI,IAAI,GAAG,EAAE,EAAE;gBACX,IAAI,GAAG,EAAE,CAAC;aACb;YACD,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,cAAc,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;SAChE;aACI;YACD,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,cAAc,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;SAChE;QACD,OAAO,GAAG,CAAC;IACf,CAAC;IAEc,YAAG,GAAlB,UAAmB,GAAW,EAAE,GAAe;QAAf,oBAAA,EAAA,OAAe;QAC3C,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QACvB,OAAO,IAAI,CAAC,MAAM,GAAG,GAAG,EAAE;YACtB,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAnFc,0BAAiB,GAAG,qBAAqB,CAAC;IAC1C,mBAAU,GAAW,iDAAiD,CAAC;IAmF1F,eAAC;CAtFD,AAsFC,IAAA;AAtFY,4BAAQ;AAwFrB,IAAY,cAeX;AAfD,WAAY,cAAc;IACtB,oDAAwB,CAAA;IACxB,4CAAqB,CAAA;IACrB,4CAA0B,CAAA;IAC1B,yCAAuB,CAAA;IACvB,mDAAuB,CAAA;IACvB,kDAAsB,CAAA;IACtB,2CAAoB,CAAA;IACpB,iDAAqB,CAAA;IACrB,mEAA6B,CAAA;IAC7B,qDAAyB,CAAA;IACzB,0CAAwB,CAAA;IACxB,6DAA4B,CAAA;IAC5B,qDAAyB,CAAA;IACzB,6DAA4B,CAAA;AAChC,CAAC,EAfW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAezB","file":"","sourceRoot":"/","sourcesContent":["\nexport class TimeUtil {\n\n    private static defaultDateFormat = \"yyyy-mm-dd HH:MM:ss\";\n    private static timeRegExp: RegExp = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsD])\\1?|[LloSZWN]/g;\n\n\n    /**\n    * format: string,\n    * time:  秒\n    */\n    public static formatDate(time: number, format: string = TimeFormatType.TIME_FORMAT_4, len: number = 2): string {\n        let day = time / (3600 * 24) >> 0;\n        let hour = this.pad((time / 3600 >> 0) % 24, len);\n        let min = this.pad((time % 3600 / 60) >> 0, len);\n        let sec = this.pad(time % 60, len);\n\n        let flags: any = {\n            d: day,\n            dd: day,\n            D: day,\n            DD: day,\n            h: hour,\n            hh: hour,\n            H: hour,\n            HH: hour,\n            m: min,\n            mm: min,\n            M: min,\n            MM: min,\n            s: sec,\n            ss: sec,\n            S: sec,\n            SS: sec,\n        };\n        format = format.replace(this.timeRegExp, (str: string) => {\n            return flags[str];\n        });\n        return format;\n    }\n\n     /**\n     * 获得时间格式 \"yyyy-mm-dd HH:MM:ss\",\n     * @param timestamp //毫秒\n     */\n    public static getYMDHMS(timestamp: number): string {\n        //timestamp是整数，否则要parseInt转换\n        var time = new Date(timestamp);\n        var y = time.getFullYear();\n        var m = time.getMonth() + 1;\n        var d = time.getDate();\n        var h = time.getHours();\n        var mm = time.getMinutes();\n        var s = time.getSeconds();\n        return y + '-' + TimeUtil.pad(m) + '-' + TimeUtil.pad(d) + ' ' + TimeUtil.pad(h) + ':' + TimeUtil.pad(mm) + ':' + TimeUtil.pad(s);\n    }\n\n    /**\n     * 获取剩余显示的时间.\n     * 大于1天   : 显示  N 天\n     * 小于1小时 : 显示  N 分钟\n     * else     : 显示  N 小时\n     */\n    public static getShowTimeDHMString(time: number): string {\n        let str: string = \"\";\n        if (time > 24 * 3600) {\n            str = this.formatDate(time, TimeFormatType.TIME_FORMAT_8, 1);\n        }\n        else if (time < 3600) {\n            if (time < 60) {\n                time = 60;\n            }\n            str = this.formatDate(time, TimeFormatType.TIME_FORMAT_9, 1);\n        }\n        else {\n            str = this.formatDate(time, TimeFormatType.TIME_FORMAT_7, 1);\n        }\n        return str;\n    }\n\n    private static pad(val: number, len: number = 2): string {\n        let val1 = String(val);\n        while (val1.length < len) {\n            val1 = '0' + val1;\n        }\n        return val1;\n    }\n}\n\nexport enum TimeFormatType {\n    TIME_FORMAT_1 = \"HH时MM分\",\n    TIME_FORMAT_2 = \"MM分\",\n    TIME_FORMAT_4 = \"HH:MM:ss\",\n    TIME_FORMAT_5 = \"MM:ss\",\n    TIME_FORMAT_6 = \"D天HH时\",\n    TIME_FORMAT_7 = \"HH小时\",\n    TIME_FORMAT_8 = \"D天\",\n    TIME_FORMAT_9 = \"M分钟\",\n    TIME_FORMAT_11 = \"HH小时MM分ss秒\",\n    TIME_FORMAT_12 = \"dd日hh时\",\n    TIME_FORMAT_19 = \"HH:MM\",\n    TIME_FORMAT_20 = \"HH时MM分ss秒\",\n    TIME_FORMAT_21 = \"MM分ss秒\",\n    TIME_FORMAT_22 = \"dd天HH时MM分\",\n}"]}