{"version":3,"sources":["assets\\scripts\\Tools\\HTTPUtil.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["export class HttpUtil {\n\n    private static UrlHead: string = \"http://127.0.0.1:1111/\";\n    /**\n     * 延迟多久没回复就放弃\n     *\n     * @type {number}\n     * @memberof DriveManager\n     */\n    private static TimeOut:number=100;\n\n    /**\n     * GET请求\n     *\n     * @static\n     * @param {*} url\n     * @param {object} [params={}]\n     * @param {*} callback\n     * @memberof HttpUtil\n     */\n    public static GET(url, params: object = {}, callback) {\n        let dataStr = '';\n        Object.keys(params).forEach(key => {\n            dataStr += key + '=' + encodeURIComponent(params[key]) + '&';\n        })\n        if (dataStr !== '') {\n            dataStr = dataStr.substr(0, dataStr.lastIndexOf('&'));\n            url = url + '?' + dataStr;\n        }\n        // url = HttpUtil.baseUrl + url;\n\n        let xhr = cc.loader.getXMLHttpRequest();\n        xhr.open(\"GET\", url, true);\n        xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                let response = xhr.responseText;\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    let httpStatus = xhr.statusText;\n                    // callback(true, JSON.parse(response));\n                    callback(true, response);\n                } else {\n                    callback(false, response);\n                }\n            }\n        };\n        xhr.timeout = this.TimeOut;\n        xhr.send();\n    }\n    \n    /**\n     * POST请求\n     *\n     * @static\n     * @param {*} url\n     * @param {object} [param={}]\n     * @param {*} callback\n     * @memberof HttpUtil\n     */\n    public static POST(url, param: object = {}, callback) {\n        // url = HttpUtil.baseUrl + url;\n        var xhr = cc.loader.getXMLHttpRequest();\n        let dataStr = '';\n        Object.keys(param).forEach(key => {\n            dataStr += key + '=' + encodeURIComponent(param[key]) + '&';\n        })\n        if (dataStr !== '') {\n            dataStr = dataStr.substr(0, dataStr.lastIndexOf('&'));\n        }\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                let response = xhr.responseText;\n                if (xhr.status >= 200 && xhr.status < 300) {\n                    let httpStatus = xhr.statusText;\n                    // callback(true, JSON.parse(response));\n                    callback(true, response);\n\n                } else {\n                    callback(false, response);\n                }\n            }\n        };\n        xhr.send(dataStr);\n    }\n}"]}