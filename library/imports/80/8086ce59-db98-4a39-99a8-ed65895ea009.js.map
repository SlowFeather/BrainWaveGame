{"version":3,"sources":["assets\\scripts\\UI\\GameUI\\GameUI.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { MessageDef } from \"../../Def/MessageDef\";\nimport { UIDef } from \"../../Def/UIDef\";\nimport DriveManager, { BrainModel } from \"../../Manager/DriveManager/DriveManager\";\nimport MessageDispatcher from \"../../Manager/MessageDispatcher/MessageDispatcher\";\nimport SoundManager from \"../../Manager/SoundManager\";\nimport UserManager, { PostResultData, PostResultModel } from \"../../Manager/UserManager/UserManager\";\nimport ResUtil from \"../../Tools/ResUtil\";\nimport { TimeUtil } from \"../../Tools/TimeUtil\";\nimport UIUtil from \"../../Tools/UIUtil\";\nimport CountDown from \"./CountDown\";\nimport Dashboard from \"./Dashboard\";\nimport RadarChartBz from \"./RadarChartBz\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class GameUI extends cc.Component {\n\n    @property(CountDown)\n    countDown:CountDown;\n\n    @property(Dashboard)\n    dashboard:Dashboard;\n\n    @property(RadarChartBz)\n    radarChartBz:RadarChartBz;\n    \n    onEnable(){\n        this.countDown.StartCountDown(this.OnCountDownEndHandler);\n\n\n        //发送游戏开始消息\n        MessageDispatcher.Instance.Dispatch(MessageDef.BrainGameStart);\n\n        MessageDispatcher.Instance.AddEventListener(MessageDef.BrainBlockMessage,this.BrainBlockMessageHandler,this);\n        MessageDispatcher.Instance.AddEventListener(MessageDef.BrainNotConnectMessage,this.BrainNotConnectMessageHandler,this);\n        MessageDispatcher.Instance.AddEventListener(MessageDef.BrainValueChangeMessage,this.BrainValueChangeMessageHandler,this);\n\n        //开始访问设备\n        DriveManager.Instance.StartPinDrive();\n\n        //记录开始时间戳\n        UserManager.Instance.InitPostResultModel();\n        UserManager.Instance.PostResultModel.startTime=TimeUtil.getYMDHMS(Date.now()).toString();\n        //2021-03-19 12:45:00\n        // var date2 = new Date(\"2016/01/27 12:00:00\")\n        // console.log();\n         \n    }\n\n    onDisable(){\n        //发送游戏结束消息\n        MessageDispatcher.Instance.Dispatch(MessageDef.BrainGameEnd);\n\n\n        //释放计时器\n        this.countDown.ReleaseCountDown();\n        //停止访问设备\n        DriveManager.Instance.StopPingDrive();\n        // DriveManager.Instance.OnBrainValueChangeEvent=null;\n\n        \n        MessageDispatcher.Instance.RemoveEventListener(MessageDef.BrainBlockMessage,this.BrainBlockMessageHandler,this);\n        MessageDispatcher.Instance.RemoveEventListener(MessageDef.BrainNotConnectMessage,this.BrainNotConnectMessageHandler,this);\n        MessageDispatcher.Instance.RemoveEventListener(MessageDef.BrainValueChangeMessage,this.BrainValueChangeMessageHandler,this);\n\n\n        // DriveManager.Instance.OnBrainNotConnectEvent=null;\n        //记录游戏结束时间戳\n        // UserManager.Instance.PostResultModel.endTime=Date.now().toString();\n        UserManager.Instance.PostResultModel.endTime=TimeUtil.getYMDHMS(Date.now()).toString();\n\n    }\n\n    start () {\n        // console.log(\"-->进入GameUI start\");\n        \n    }\n    BrainValueChangeMessageHandler(module:BrainModel){\n        var dateModule=new PostResultData();\n        dateModule.delta=module.brain[0].Delta;\n        dateModule.theta=module.brain[0].Theta;\n        dateModule.lowAlpha=module.brain[0].LowAlpha;\n        dateModule.highAlpha=module.brain[0].HighAlpha;\n        dateModule.lowBeta=module.brain[0].LowBeta;\n        dateModule.highBeta=module.brain[0].HighBeta;\n        dateModule.lowGamma=module.brain[0].LowGamma;\n        dateModule.highGamma=module.brain[0].HighGamma;\n        dateModule.concentration=module.brain[0].Concentration;\n        dateModule.relaxation=module.brain[0].Relaxation;\n        UserManager.Instance.PostResultModel.data.push(dateModule);\n    }\n    BrainNotConnectMessageHandler(){\n        if (this.countDown.stoped) {\n            \n        }else{\n            this.OnBlockBtnClick();\n        }\n    }\n    BrainBlockMessageHandler(){\n        this.OnBlockBtnClick();\n    }\n\n\n    OnCountDownEndHandler(){\n        console.log(\"--> 游戏结束\"+this.node.name);\n\n        UIUtil.ShowUI(UIDef.ShowResultUI,()=>{\n            UIUtil.HideUI(UIDef.GameUI);\n        })\n    }\n\n    OnBackBtnClick(){\n        console.log(\"--> 点击了回到主页面按钮\");\n        SoundManager.playEffect(2);\n\n        UIUtil.ShowUI(UIDef.StartUI,()=>{\n            UIUtil.HideUI(UIDef.GameUI);\n        });\n    }\n\n    OnBlockBtnClick(){\n        // console.log(\"--> 点击了断开连接按钮\");\n        this.countDown.StopCountDown();\n        UIUtil.ShowUI(UIDef.DisConnectUI);\n    }\n    OnConnectBtnClick(){\n        // console.log(\"--> 点击了恢复连接按钮\");\n        this.countDown.ContinueCountDown();\n        UIUtil.HideUI(UIDef.DisConnectUI);\n    }\n\n    onDestroy(){\n        \n    }\n    update (dt) {\n\n    }\n}\n"]}