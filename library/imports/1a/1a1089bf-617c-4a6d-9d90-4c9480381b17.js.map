{"version":3,"sources":["assets\\scripts\\UI\\GameUI\\RadarChartBz.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mDAAkD;AAElD,uFAAkF;AAClF,iDAA4C;AAEtC,IAAA,kBAGW,EAFb,oBAAO,EACP,sBACa,CAAC;AAGlB;IAA0C,gCAAY;IADtD;QAAA,qEA8ZC;QAvZG,iBAAW,GAAW,CAAC,CAAC;QAExB,MAAM;QAKN,eAAS,GAAa,EAAE,CAAC;QAOzB,eAAS,GAAW,GAAG,CAAC;QAExB,gBAAgB;QAKhB,eAAS,GAAW,CAAC,CAAC;QAW1B,YAAY;QAER,YAAY;QAKZ,iBAAW,GAAW,CAAC,CAAC;QAW5B,YAAY;QAKR;;;;;WAKG;QACH,cAAQ,GAAgB,IAAI,CAAC;QAC7B;;;;WAIG;QACH,WAAK,GAAG,EAAE,CAAC;QA2BX,cAAQ,GAAQ,CAAC,CAAC;QAClB,WAAK,GAAQ,CAAC,CAAC;QACf,WAAK,GAAQ,CAAC,CAAC;QACf,eAAS,GAAQ,CAAC,CAAC;QACnB,cAAQ,GAAQ,CAAC,CAAC;QAClB,cAAQ,GAAQ,CAAC,CAAC;QAClB,aAAO,GAAQ,CAAC,CAAC;QACjB,eAAS,GAAQ,CAAC,CAAC;;IAkTvB,CAAC;IAlVG,6BAAM,GAAN;QACI,MAAM;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IAED,+BAAQ,GAAR;QACI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,2BAAiB,CAAC,QAAQ,CAAC,gBAAgB,CAAC,uBAAU,CAAC,uBAAuB,EAAC,IAAI,CAAC,8BAA8B,EAAC,IAAI,CAAC,CAAC;IAE7H,CAAC;IAED,gCAAS,GAAT;IAEA,CAAC;IAaD,qDAA8B,GAA9B,UAA+B,MAAiB;QAC5C,IAAI,MAAM,IAAE,IAAI,EAAE;YACd,OAAO;SACV;QACD,YAAY;QAEZ,IAAI,QAAQ,GAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,KAAK,GAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,KAAK,GAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,SAAS,GAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAChD,IAAI,QAAQ,GAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,QAAQ,GAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,OAAO,GAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,SAAS,GAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAEhD,IAAI,WAAW,GAAC,MAAM,CAAC;QAEvB,IAAI,QAAQ,IAAE,WAAW,EAAE;YACvB,QAAQ,GAAE,QAAQ,GAAC,WAAW,CAAC;YAC/B,IAAI,QAAQ,IAAE,QAAQ,EAAE;gBACpB,QAAQ,GAAC,QAAQ,CAAC;aACrB;SACJ;QACD,IAAI,KAAK,IAAE,WAAW,EAAE;YACpB,KAAK,GAAE,KAAK,GAAC,WAAW,CAAC;YACzB,IAAI,KAAK,IAAE,QAAQ,EAAE;gBACjB,KAAK,GAAC,QAAQ,CAAC;aAClB;SACJ;QACD,IAAI,KAAK,IAAE,WAAW,EAAE;YACpB,KAAK,GAAE,KAAK,GAAC,WAAW,CAAC;YACzB,IAAI,KAAK,IAAE,QAAQ,EAAE;gBACjB,KAAK,GAAC,QAAQ,CAAC;aAClB;SACJ;QACD,IAAI,SAAS,IAAE,WAAW,EAAE;YACxB,SAAS,GAAE,SAAS,GAAC,WAAW,CAAC;YACjC,IAAI,SAAS,IAAE,QAAQ,EAAE;gBACrB,SAAS,GAAC,QAAQ,CAAC;aACtB;SACJ;QACD,IAAI,QAAQ,IAAE,WAAW,EAAE;YACvB,QAAQ,GAAE,QAAQ,GAAC,WAAW,CAAC;YAC/B,IAAI,QAAQ,IAAE,QAAQ,EAAE;gBACpB,QAAQ,GAAC,QAAQ,CAAC;aACrB;SACJ;QACD,IAAI,QAAQ,IAAE,WAAW,EAAE;YACvB,QAAQ,GAAE,QAAQ,GAAC,WAAW,CAAC;YAC/B,IAAI,QAAQ,IAAE,QAAQ,EAAE;gBACpB,QAAQ,GAAC,QAAQ,CAAC;aACrB;SACJ;QACD,IAAI,OAAO,IAAE,WAAW,EAAE;YACtB,OAAO,GAAE,OAAO,GAAC,WAAW,CAAC;YAC7B,IAAI,OAAO,IAAE,QAAQ,EAAE;gBACnB,OAAO,GAAC,QAAQ,CAAC;aACpB;SACJ;QACD,IAAI,SAAS,IAAE,WAAW,EAAE;YACxB,SAAS,GAAE,SAAS,GAAC,WAAW,CAAC;YACjC,IAAI,SAAS,IAAE,QAAQ,EAAE;gBACrB,SAAS,GAAC,QAAQ,CAAC;aACtB;SACJ;QAKD,IAAI,CAAC,QAAQ,GAAC,kBAAQ,CAAC,KAAK,CAAC,QAAQ,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,GAAG,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,GAAC,kBAAQ,CAAC,KAAK,CAAC,KAAK,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,GAAG,CAAC,CAAE;QACnD,IAAI,CAAC,KAAK,GAAC,kBAAQ,CAAC,KAAK,CAAC,KAAK,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,GAAG,CAAC,CAAE;QACnD,IAAI,CAAC,SAAS,GAAC,kBAAQ,CAAC,KAAK,CAAC,SAAS,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,GAAG,CAAC,CAAE;QAC3D,IAAI,CAAC,QAAQ,GAAC,kBAAQ,CAAC,KAAK,CAAC,QAAQ,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,GAAG,CAAC,CAAE;QACzD,IAAI,CAAC,QAAQ,GAAC,kBAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,GAAG,CAAC,CAAE;QACjE,IAAI,CAAC,OAAO,GAAC,kBAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,GAAG,CAAC,CAAE;QAC/D,IAAI,CAAC,SAAS,GAAC,kBAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,EAAC,CAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,GAAG,CAAC,CAAE;QACnE,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAC,KAAK,GAAC,QAAQ,GAAC,MAAM,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAGpG,4CAA4C;QAC5C,4CAA4C;QAC5C,oDAAoD;QACpD,kDAAkD;QAClD,kDAAkD;QAClD,gDAAgD;QAChD,oDAAoD;QAEpD,kDAAkD;QAClD,4CAA4C;QAC5C,4CAA4C;QAC5C,oDAAoD;QACpD,kDAAkD;QAClD,kDAAkD;QAClD,gDAAgD;QAChD,oDAAoD;QAEpD,aAAa;IAEjB,CAAC;IAGD,4BAAK,GAAL;QACI,QAAQ;QACR,0BAA0B;QAC1B,QAAQ;QACR,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAED,6BAAM,GAAN,UAAO,EAAE;QACL,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,QAAQ,EAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,KAAK,EAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,KAAK,EAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,SAAS,EAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,QAAQ,EAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,QAAQ,EAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,OAAO,EAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,SAAS,EAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAGnE,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAED,QAAQ;IACR;;;;OAIG;IACH,wCAAiB,GAAjB;QACI,QAAQ;QACR,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,QAAQ,GAAG,GAAG,EAAE,QAAQ,EAAE,EAAE;YACvE,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC;YACzC,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACZ,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;gBACJ,OAAO;gBACP,KAAK,EAAE,KAAK;gBACZ,qCAAqC;gBACrC,oCAAoC;gBACpC,KAAK,EAAE,KAAK;aACf,CAAC,CAAC;SACN;IACL,CAAC;IAED,iCAAU,GAAV;QACI,OAAO;QACP,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YAC/C,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC;YACzE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC,SAAS,CAAC;SAC5E;IACL,CAAC;IACD;;;;OAIG;IACH,uCAAgB,GAAhB;QACI,8BAA8B;QAC9B,eAAe;QACf,eAAe;QACf,eAAe;QACf,iBAAiB;IACrB,CAAC;IACD,6BAAM,GAAN;QACI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IACD,kCAAW,GAAX;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,YAAY,EAAE,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC;QAEpC,QAAQ,CAAC,WAAW,GAAI,IAAI,CAAC,SAAS,CAAC;QACvC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC5C,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;QAC1C,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAChD,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAEpC,8BAA8B;QAC9B,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,UAAC,IAAI,EAAE,KAAK;YAE/B,QAAQ;YACR,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvC,SAAS;YACT,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAErB,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YAC3D,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YAE3D,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YAExB,wBAAwB;YACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAEnC,YAAY,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxB,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAElF,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC3D,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBAE3D,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;aACrE;YAED,QAAQ,CAAC,IAAI,EAAE,CAAC;YAChB,QAAQ,CAAC,MAAM,EAAE,CAAC;YAElB,cAAc;YACd,0BAA0B;YAC1B,gDAAgD;YAChD,kDAAkD;YAClD,2CAA2C;YAC3C,yCAAyC;YACzC,wBAAwB;YACxB,0CAA0C;YAE1C,sBAAsB;YACtB,+BAA+B;YAC/B,yFAAyF;YAEzF,kEAAkE;YAClE,kEAAkE;YAElE,+BAA+B;YAE/B,uBAAuB;YACvB,gCAAgC;YAChC,0FAA0F;YAE1F,kEAAkE;YAClE,kEAAkE;YAElE,+BAA+B;YAC/B,yBAAyB;YAEzB,sBAAsB;YACtB,+BAA+B;YAC/B,yFAAyF;YAEzF,kEAAkE;YAClE,kEAAkE;YAElE,kCAAkC;YAClC,uBAAuB;YAEvB,uBAAuB;YACvB,gCAAgC;YAChC,0FAA0F;YAE1F,kEAAkE;YAClE,kEAAkE;YAElE,kCAAkC;YAClC,uBAAuB;YAEvB,IAAI;YACJ,YAAY;QAChB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAgB,GAAhB;QACI,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE7B,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC9C,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;QAC5C,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAE;QACnD,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;QAEtC,IAAI;QACJ,sCAAsC;QACtC,sCAAsC;QAEtC,IAAI;QACJ,sCAAsC;QACtC,sCAAsC;QAEtC,MAAM;QACN,2CAA2C;QAC3C,2CAA2C;QAC3C,2CAA2C;QAC3C,2CAA2C;QAC3C,2CAA2C;QAC3C,2CAA2C;QAC3C,2CAA2C;QAC3C,2CAA2C;QAE3C,mBAAmB;QACnB,qBAAqB;IACzB,CAAC;IAED,2BAAI,GAAJ,UAAK,KAAY,EAAC,GAAU,EAAC,IAAW;QACpC,OAAO,KAAK,GAAC,CAAC,GAAG,GAAC,KAAK,CAAC,GAAC,IAAI,CAAC;IAClC,CAAC;IApZD;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,MAAM;SAClB,CAAC;qDACsB;IAOxB;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,CAAC,MAAM,CAAC;YACd,OAAO,EAAE,MAAM;SAClB,CAAC;mDACuB;IAOzB;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,MAAM;SAClB,CAAC;mDACsB;IAOxB;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,KAAK;SACjB,CAAC;mDACoB;IAKtB;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,KAAK;YACd,OAAO,EAAE,KAAK;SACjB,CAAC;mDACmB;IAKrB;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,KAAK;YACd,OAAO,EAAE,MAAM;SAClB,CAAC;yDACwB;IAQ1B;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,KAAK;SACjB,CAAC;qDACsB;IAKxB;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,KAAK;YACd,OAAO,EAAE,KAAK;SACjB,CAAC;qDACoB;IAKtB;QAJC,QAAQ,CAAC;YACN,IAAI,EAAE,EAAE,CAAC,KAAK;YACd,OAAO,EAAE,MAAM;SAClB,CAAC;2DAC0B;IAvDX,YAAY;QADhC,OAAO;OACa,YAAY,CA6ZhC;IAAD,mBAAC;CA7ZD,AA6ZC,CA7ZyC,EAAE,CAAC,SAAS,GA6ZrD;kBA7ZoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import { MessageDef } from \"../../Def/MessageDef\";\nimport DriveManager, { BrainModel } from \"../../Manager/DriveManager/DriveManager\";\nimport MessageDispatcher from \"../../Manager/MessageDispatcher/MessageDispatcher\";\nimport MathUtil from \"../../Tools/MathUtil\";\n\nconst {\n    ccclass,\n    property\n} = cc._decorator;\n\n@ccclass\nexport default class RadarChartBz extends cc.Component {\n\n    @property({\n        type: Number,\n        tooltip: \"数据个数\"\n    })\n    pointNumber: number = 8;\n\n    //数据数组\n    @property({\n        type: [Number],\n        tooltip: \"数据数组\"\n    })\n    dataArray: number[] = [];\n\n\n    @property({\n        type: Number,\n        tooltip: \"最大边界\"\n    })\n    maxNumber: number = 100;\n\n    //#region 贝塞尔雷达图\n    @property({\n        type: Number,\n        tooltip: \"线宽度\"\n    })\n    lineWidth: number = 1;\n    @property({\n        type: cc.Color,\n        tooltip: \"线颜色\"\n    })\n    lineColor: cc.Color ;\n    @property({\n        type: cc.Color,\n        tooltip: \"内部颜色\"\n    })\n    backgroundColor: cc.Color;\n//#endregion\n\n    //#region 底板\n    @property({\n        type: Number,\n        tooltip: \"线宽度\"\n    })\n    bglineWidth: number = 1;\n    @property({\n        type: cc.Color,\n        tooltip: \"线颜色\"\n    })\n    bglineColor: cc.Color;\n    @property({\n        type: cc.Color,\n        tooltip: \"内部颜色\"\n    })\n    bgbackgroundColor: cc.Color;\n//#endregion\n    \n\n\n\n    /**\n     * 渲染组件\n     *\n     * @type {cc.Graphics}\n     * @memberof doodlets\n     */\n    graphics: cc.Graphics = null;\n    /**\n     * 点数组\n     *\n     * @memberof doodlets\n     */\n    nodes = [];\n\n    onLoad() {\n        //拿到组件\n        this.graphics = this.node.getComponent(cc.Graphics);\n    }\n\n    onEnable(){\n        this.dataArray[0]=0;\n        this.dataArray[1]=0;\n        this.dataArray[2]=0;\n        this.dataArray[3]=0;\n        this.dataArray[4]=0;\n        this.dataArray[5]=0;\n        this.dataArray[6]=0;\n        this.dataArray[7]=0;\n        this.updateNode();\n        this.render();\n        MessageDispatcher.Instance.AddEventListener(MessageDef.BrainValueChangeMessage,this.BrainValueChangeMessageHandler,this);\n\n    }\n\n    onDisable(){\n\n    }\n\n\n    LowAlpha:number=0;\n    Theta:number=0;\n    Delta:number=0;\n    HighGamma:number=0;\n    LowGamma:number=0;\n    HighBeta:number=0;\n    LowBeta:number=0;\n    HighAlpha:number=0;\n\n\n    BrainValueChangeMessageHandler(module:BrainModel){\n        if (module==null) {\n            return;\n        }\n        //0-16777216\n\n        let lowAlpha=Number(module.brain[0].LowAlpha);\n        let theta=Number(module.brain[0].Theta);\n        let delta=Number(module.brain[0].Delta);\n        let highGamma=Number(module.brain[0].HighGamma);\n        let lowGamma=Number(module.brain[0].LowGamma);\n        let highBeta=Number(module.brain[0].HighBeta);\n        let lowBeta=Number(module.brain[0].LowBeta);\n        let highAlpha=Number(module.brain[0].HighAlpha);\n\n        let coefficient=100000;\n\n        if (lowAlpha<=coefficient) {\n            lowAlpha= lowAlpha*coefficient;\n            if (lowAlpha>=16777216) {\n                lowAlpha=16777216;\n            }\n        }\n        if (theta<=coefficient) {\n            theta= theta*coefficient;\n            if (theta>=16777216) {\n                theta=16777216;\n            }\n        }\n        if (delta<=coefficient) {\n            delta= delta*coefficient;\n            if (delta>=16777216) {\n                delta=16777216;\n            }\n        }\n        if (highGamma<=coefficient) {\n            highGamma= highGamma*coefficient;\n            if (highGamma>=16777216) {\n                highGamma=16777216;\n            }\n        }\n        if (lowGamma<=coefficient) {\n            lowGamma= lowGamma*coefficient;\n            if (lowGamma>=16777216) {\n                lowGamma=16777216;\n            }\n        }\n        if (highBeta<=coefficient) {\n            highBeta= highBeta*coefficient;\n            if (highBeta>=16777216) {\n                highBeta=16777216;\n            }\n        }\n        if (lowBeta<=coefficient) {\n            lowBeta= lowBeta*coefficient;\n            if (lowBeta>=16777216) {\n                lowBeta=16777216;\n            }\n        }\n        if (highAlpha<=coefficient) {\n            highAlpha= highAlpha*coefficient;\n            if (highAlpha>=16777216) {\n                highAlpha=16777216;\n            }\n        }\n\n\n\n\n        this.LowAlpha=MathUtil.reMap(lowAlpha,0,16777216,0,100);\n        this.Theta=MathUtil.reMap(theta,0,16777216,0,100) ;\n        this.Delta=MathUtil.reMap(delta,0,16777216,0,100) ;\n        this.HighGamma=MathUtil.reMap(highGamma,0,16777216,0,100) ;\n        this.LowGamma=MathUtil.reMap(lowGamma,0,16777216,0,100) ;\n        this.HighBeta=MathUtil.reMap(Number(highBeta),0,16777216,0,100) ;\n        this.LowBeta=MathUtil.reMap(Number(lowBeta),0,16777216,0,100) ;\n        this.HighAlpha=MathUtil.reMap(Number(highAlpha),0,16777216,0,100) ;\n        console.log(\"--->LowAlpha 原：\"+Number(module.brain[0].LowAlpha)+\"-后：\"+lowAlpha+\"-最后：\"+this.LowAlpha);\n\n\n        // this.Theta=Number(module.brain[0].Theta);\n        // this.Delta=Number(module.brain[0].Delta);\n        // this.HighGamma=Number(module.brain[0].HighGamma);\n        // this.LowGamma=Number(module.brain[0].LowGamma);\n        // this.HighBeta=Number(module.brain[0].HighBeta);\n        // this.LowBeta=Number(module.brain[0].LowBeta);\n        // this.HighAlpha=Number(module.brain[0].HighAlpha);\n\n        // this.LowAlpha=Number(module.brain[0].LowAlpha);\n        // this.Theta=Number(module.brain[0].Theta);\n        // this.Delta=Number(module.brain[0].Delta);\n        // this.HighGamma=Number(module.brain[0].HighGamma);\n        // this.LowGamma=Number(module.brain[0].LowGamma);\n        // this.HighBeta=Number(module.brain[0].HighBeta);\n        // this.LowBeta=Number(module.brain[0].LowBeta);\n        // this.HighAlpha=Number(module.brain[0].HighAlpha);\n\n        // 0-16777216\n\n    }\n\n\n    start() {\n        //更新颜色周期\n        //this.updateColorCycle();\n        //创建贝塞尔点\n        this.createBezierNodes();\n    }\n\n    update(dt) {\n        this.dataArray[0]=this.Lerp(this.dataArray[0],this.LowAlpha,dt*2);\n        this.dataArray[1]=this.Lerp(this.dataArray[1],this.Theta,dt*2);\n        this.dataArray[2]=this.Lerp(this.dataArray[2],this.Delta,dt*2);\n        this.dataArray[3]=this.Lerp(this.dataArray[3],this.HighGamma,dt*2);\n        this.dataArray[4]=this.Lerp(this.dataArray[4],this.LowGamma,dt*2);\n        this.dataArray[5]=this.Lerp(this.dataArray[5],this.HighBeta,dt*2);\n        this.dataArray[6]=this.Lerp(this.dataArray[6],this.LowBeta,dt*2);\n        this.dataArray[7]=this.Lerp(this.dataArray[7],this.HighAlpha,dt*2);\n\n\n        this.updateNode();\n        this.render();\n    }\n\n    //创建贝塞尔点\n    /**\n     *\n     *\n     * @memberof doodlets\n     */\n    createBezierNodes() {\n        //创建8个顶点\n        for (var quantity = 0, len = this.pointNumber; quantity < len; quantity++) {\n            var theta = Math.PI * 2 * quantity / len;\n            var x = 0;\n            var y = 0;\n            this.nodes.push({\n                x: x,\n                y: y,\n                //在圆上随机\n                angle: theta,\n                //angle: Math.random() * Math.PI * 2,\n                //弧度                                \n                theta: theta\n            });\n        }\n    }\n\n    updateNode() {\n        //装了8个点\n        let nodes = this.nodes;\n\n        for (let index = 0; index < nodes.length; index++) {\n            let node = nodes[index];\n            node.x = this.dataArray[index] * Math.cos(node.theta)/100*this.maxNumber;\n            node.y = this.dataArray[index] * Math.sin(node.theta)/100*this.maxNumber;\n        }\n    }\n    /**\n     * 更新颜色周期\n     *\n     * @memberof doodlets\n     */\n    updateColorCycle() {\n        // let color = this.lineColor;\n        // color.r=150;\n        // color.g=150;\n        // color.b=150;\n        // color.a = 255;\n    }\n    render() {\n        this.graphics.clear();\n        this.BackgroundRender();\n        this.RadarRender();\n    }\n    RadarRender() {\n        let nodes = this.nodes;\n        let graphics = this.graphics;\n        var currentIndex, nextIndex, xc, yc;\n\n        graphics.strokeColor =  this.lineColor;\n        graphics.strokeColor.setA(this.lineColor.a);\n        graphics.fillColor = this.backgroundColor;\n        graphics.fillColor.setA(this.backgroundColor.a);\n        graphics.lineWidth = this.lineWidth;\n        \n        //下面有多少个点遍历多少次                \n        [].forEach.call(nodes, (node, index) => {\n\n            //当前node\n            currentIndex = nodes[nodes.length - 1];\n            //第0个node\n            nextIndex = nodes[0];\n\n            xc = currentIndex.x + (nextIndex.x - currentIndex.x) * 0.5;\n            yc = currentIndex.y + (nextIndex.y - currentIndex.y) * 0.5;\n\n            graphics.moveTo(xc, yc);\n\n            // Draw through N points\n            for (var N = 0; N < nodes.length; N++) {\n\n                currentIndex = nodes[N];\n                nextIndex = N + 1 > nodes.length - 1 ? nodes[N - nodes.length + 1] : nodes[N + 1];\n\n                xc = currentIndex.x + (nextIndex.x - currentIndex.x) * 0.5;\n                yc = currentIndex.y + (nextIndex.y - currentIndex.y) * 0.5;\n\n                graphics.quadraticCurveTo(currentIndex.x, currentIndex.y, xc, yc);\n            }\n\n            graphics.fill();\n            graphics.stroke();\n\n            //#region 手柄线条\n            // graphics.lineWidth = 1;\n            // graphics.lineCap = cc.Graphics.LineCap.ROUND;\n            // graphics.lineJoin = cc.Graphics.LineJoin.ROUND;\n            // graphics.strokeColor.fromHEX('#a9a9a9');\n            // graphics.fillColor.fromHEX('#a9a9a9');\n            // Draw through N points\n            // for(var N = 0; N < nodes.length; N++) {\n\n            //     // First anchor\n            //     currentIndex = nodes[N];\n            //     nextIndex = N + 1 > nodes.length - 1 ? nodes[N - nodes.length + 1] : nodes[N + 1];\n\n            //     xc = currentIndex.x + (nextIndex.x - currentIndex.x) * 0.8;\n            //     yc = currentIndex.y + (nextIndex.y - currentIndex.y) * 0.8;\n\n            //     graphics.moveTo(xc, yc);\n\n            //     // Second anchor\n            //     currentIndex = nextIndex;\n            //     nextIndex = N + 2 > nodes.length - 1 ? nodes[N - nodes.length + 2] : nodes[N + 2]; \n\n            //     xc = currentIndex.x + (nextIndex.x - currentIndex.x) * 0.2;\n            //     yc = currentIndex.y + (nextIndex.y - currentIndex.y) * 0.2;\n\n            //     graphics.lineTo(xc, yc);\n            //     graphics.stroke();\n\n            //     // First anchor\n            //     currentIndex = nodes[N];\n            //     nextIndex = N + 1 > nodes.length - 1 ? nodes[N - nodes.length + 1] : nodes[N + 1];\n\n            //     xc = currentIndex.x + (nextIndex.x - currentIndex.x) * 0.8;\n            //     yc = currentIndex.y + (nextIndex.y - currentIndex.y) * 0.8;\n\n            //     graphics.circle(xc, yc, 2);\n            //     graphics.fill();\n\n            //     // Second anchor\n            //     currentIndex = nextIndex;\n            //     nextIndex = N + 2 > nodes.length - 1 ? nodes[N - nodes.length + 2] : nodes[N + 2]; \n\n            //     xc = currentIndex.x + (nextIndex.x - currentIndex.x) * 0.2;\n            //     yc = currentIndex.y + (nextIndex.y - currentIndex.y) * 0.2;\n\n            //     graphics.circle(xc, yc, 2);\n            //     graphics.fill();\n\n            // }\n            //#endregion\n        });\n    }\n\n    BackgroundRender(){\n        let graphics = this.graphics;\n\n        graphics.strokeColor = this.bglineColor;\n        graphics.strokeColor.setA(this.bglineColor.a);\n        graphics.fillColor = this.bgbackgroundColor;\n        graphics.fillColor.setA(this.bgbackgroundColor.a) ;\n        graphics.lineWidth = this.bglineWidth;\n        \n        //竖线\n        // graphics.moveTo(0, this.maxNumber);\n        // graphics.lineTo(0,-this.maxNumber);\n\n        //横线\n        // graphics.moveTo(this.maxNumber, 0);\n        // graphics.lineTo(-this.maxNumber,0);\n\n        //中间圆圈\n        // graphics.circle(0,0,this.maxNumber*0.8);\n        // graphics.circle(0,0,this.maxNumber*0.7);\n        // graphics.circle(0,0,this.maxNumber*0.6);\n        // graphics.circle(0,0,this.maxNumber*0.5);\n        // graphics.circle(0,0,this.maxNumber*0.4);\n        // graphics.circle(0,0,this.maxNumber*0.3);\n        // graphics.circle(0,0,this.maxNumber*0.2);\n        // graphics.circle(0,0,this.maxNumber*0.1);\n\n        // graphics.fill();\n        // graphics.stroke();\n    }\n\n    Lerp(start:number,end:number,time:number){\n        return start+(end-start)*time;\n    }\n\n\n}"]}